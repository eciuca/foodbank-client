# Virtual Hosts
#
# Required modules: mod_log_config

# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at 
# <URL:http://httpd.apache.org/docs/2.4/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#
<VirtualHost *:80>
    ServerAdmin alain_vandermeersch@gmail.com
    ServerName ${SERVER_NAME}
    Redirect / https://${SERVER_NAME}/
    #   DocumentRoot /var/www/
    #   ErrorLog ${APACHE_LOG_DIR}/error.log
    #   CustomLog ${APACHE_LOG_DIR}/access.log combined
</VirtualHost>

<VirtualHost *:443>
    # https://www.developercookies.net/generate-and-renew-lets-encrypt-certificates-for-apache-with-docker/
    ServerAdmin alain_vandermeersch@gmail.com
    ServerName ${SERVER_NAME}
    Alias "/.well-known" "/home/letsencrypt/data/.well-known"
    
    SSLCertificateFile /home/letsencrypt/certs/live/${SERVER_NAME}/cert.pem
    SSLCertificateKeyFile /home/letsencrypt/certs/live/${SERVER_NAME}/privkey.pem
    SSLCertificateChainFile /home/letsencrypt/certs/live/${SERVER_NAME}/fullchain.pem
    
    ProxyPreserveHost On
    # Servers to proxy the connection, or
    # List of application servers Usage
    ProxyPass /api http://${BACKEND_HOST}:${BACKEND_PORT}/api
    ProxyPassReverse /api http://${BACKEND_HOST}:${BACKEND_PORT}/api
</VirtualHost>
